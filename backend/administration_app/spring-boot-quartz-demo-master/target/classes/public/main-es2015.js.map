{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-route/add-route.component.ts","./src/app/components/add-route/add-route.component.html","./src/app/components/confirm-route-delete/confirm-route-delete.component.ts","./src/app/components/confirm-route-delete/confirm-route-delete.component.html","./src/app/components/edit-route/edit-route.component.ts","./src/app/components/edit-route/edit-route.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/scheduler/response.code.constants.ts","./src/app/components/scheduler/scheduler.component.ts","./src/app/components/scheduler/scheduler.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/services/auth-interceptor.service.ts","./src/app/services/route.service.ts","./src/app/services/scheduler.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'frontend';\n\n}\n","<!-- The routed views render in the <router-outlet>-->\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ConfirmRouteDeleteComponent } from './components/confirm-route-delete/confirm-route-delete.component';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { AddRouteComponent } from './components/add-route/add-route.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { EditRouteComponent } from './components/edit-route/edit-route.component';\nimport { SchedulerComponent } from './components/scheduler/scheduler.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LoginComponent } from './components/login/login.component';\nimport { AuthInterceptorService } from './services/auth-interceptor.service';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\n\nconst routes: Routes = [\n\t{ path: 'home', component: HomeComponent },\n\t{ path: 'addroute', component: AddRouteComponent },\n\t{ path: 'editroute/:routeID', component: EditRouteComponent },\n\t{ path: 'scheduler', component: SchedulerComponent },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: '', redirectTo: '/home', pathMatch: 'full' },\n]\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tHomeComponent,\n\t\tConfirmRouteDeleteComponent,\n\t\tAddRouteComponent,\n\t\tEditRouteComponent,\n\t\tSchedulerComponent,\n\t\tLoginComponent,\n\t\tToolbarComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tRouterModule.forRoot(routes),\n\t\tMatToolbarModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatBottomSheetModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tHttpClientModule,\n\t\tHttpModule,\n\t\tMatSelectModule\n\t],\n\tproviders: [\n\t\t{\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: AuthInterceptorService,\n\t\t\tmulti: true\n\t\t}\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RouteService } from 'src/app/services/route.service';\n\n@Component({\n\tselector: 'app-add-route',\n\ttemplateUrl: './add-route.component.html',\n\tstyleUrls: ['./add-route.component.css']\n})\nexport class AddRouteComponent {\n\n\tnewRoute: FormGroup = new FormGroup({\n\t\tname: new FormControl(),\n\t\turi: new FormControl(),\n\t\tusername: new FormControl(),\n\t\tpassword: new FormControl()\n\t});\n\n\tisReachable: boolean = false;\n\n\tconstructor(private location: Location,\n\t\tprivate router: Router,\n\t\tprivate routeService: RouteService) { }\n\n\tgoBack() {\n\t\tthis.location.back();\n\t}\n\n\ttryConnection(): void {\n\t\tthis.routeService.checkReachability(\"idHARDCODED\").subscribe(res => {\n\t\t\tconsole.log(\"Is reachable?---> \" + res);\n\t\t\tconsole.log(this.newRoute.value);\n\n\t\t\t// The new status of reachability will be calculated here\n\t\t\tvar random = Math.random();\n\t\t\tthis.isReachable = random < 0.5;\n\t\t})\n\t}\n\n\tsave(): void {\n\t\tthis.routeService.addRoute(\n\t\t\tthis.newRoute.value.name,\n\t\t\tthis.newRoute.value.uri,\n\t\t\tthis.newRoute.value.username,\n\t\t\tthis.newRoute.value.password\n\t\t).subscribe(\n\t\t\tres => {\n\t\t\t\tif (res['statusCode'] == 201) {\n\t\t\t\t\tthis.router.navigate(['/home']);\n\t\t\t\t}\n\t\t\t\telse if (res['statusCode'] == 400) {\n\t\t\t\t\tconsole.error(res);\n\t\t\t\t\talert(\"It was not possible to save the route\");\n\t\t\t\t}\n\t\t\t})\n\t}\n\n}\n","<app-toolbar></app-toolbar>\n<button mat-icon-button class=\"goBack\" (click)=\"goBack()\">\n\t<mat-icon>arrow_back</mat-icon>\n</button>\n<div class=\"general\">\n\t<h2 class=\"addRoute\">\n\t\tAdd a new route\n\t</h2>\n\t<form [formGroup]=\"newRoute\">\n\t\t<mat-form-field appearance=\"legacy\">\n\t\t\t<mat-label>Name</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"name\">\n\t\t</mat-form-field>\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"uri\">\n\t\t\t<mat-label>uri</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"uri\">\n\t\t</mat-form-field>\n\t\t<!-- <button mat-icon-button disabled>\n\t\t\t<mat-icon id=\"reachable\" class=\"status\" *ngIf=\"isReachable\">check_circle</mat-icon>\n\t\t\t<mat-icon id=\"notReachable\" class=\"status\" *ngIf=\"!isReachable\">highlight_off</mat-icon>\n\t\t</button> -->\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"username\">\n\t\t\t<mat-label>Username</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"username\">\n\t\t</mat-form-field>\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"password\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"password\">\n\t\t</mat-form-field>\n\t</form>\n\t<div class=\"controls\">\n\t\t<!-- <button mat-raised-button id=\"tryConnection\" (click)=\"tryConnection()\">Try connection</button>\n\t\t<br> -->\n\t\t<button mat-raised-button id=\"save\" (click)=\"save()\">Save</button>\n\t</div>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { route } from '../home/home.component'\n\n@Component({\n\tselector: 'app-confirm-route-delete',\n\ttemplateUrl: './confirm-route-delete.component.html',\n\tstyleUrls: ['./confirm-route-delete.component.css']\n})\nexport class ConfirmRouteDeleteComponent {\n\n\tpublic route: route;\n\n\tconstructor(private bottomsheet: MatBottomSheetRef<ConfirmRouteDeleteComponent>,\n\t\t@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n\t\tthis.route = data.route;\n\t}\n\n\tdeleteRoutePermanently(){\n\t\tthis.bottomsheet.dismiss(\"deletePermanently\");\n\t}\n\n}\n","<div class=\"bottomSheet\">\n\t<h3>Are you sure you want to delete <span id=\"routeTitle\">{{route.name}}</span>?</h3>\n\t<button mat-raised-button color=\"warn\" (click)=\"deleteRoutePermanently()\">I'm sure I want to delete the database</button>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RouteService } from 'src/app/services/route.service';\n\n@Component({\n\tselector: 'app-edit-route',\n\ttemplateUrl: './edit-route.component.html',\n\tstyleUrls: ['./edit-route.component.css']\n})\nexport class EditRouteComponent {\n\n\trouteID: string;\n\n\tnewRoute: FormGroup = new FormGroup({\n\t\tname: new FormControl(),\n\t\turi: new FormControl(),\n\t\tusername: new FormControl(),\n\t\tpassword: new FormControl()\n\t});\n\n\tisReachable: boolean = false;\n\n\tconstructor(private location: Location,\n\t\tprivate router: Router,\n\t\tprivate activatedroute: ActivatedRoute,\n\t\tprivate routeService: RouteService) {\n\t\tthis.activatedroute.paramMap.subscribe(\n\t\t\tparams => {\n\t\t\t\tthis.routeID = params.get('routeID');\n\t\t\t\tthis.routeService.getRoute(this.routeID).subscribe(\n\t\t\t\t\tres => {\n\t\t\t\t\t\tif (res['statusCode'] == 200) {\n\t\t\t\t\t\t\t//This will fill the form with the previous route info\n\t\t\t\t\t\t\tthis.newRoute.get('name').setValue(res['data']['name']);\n\t\t\t\t\t\t\tthis.newRoute.get('uri').setValue(res['data']['uri']);\n\t\t\t\t\t\t\tthis.newRoute.get('username').setValue(res['data']['username']);\n\t\t\t\t\t\t\tthis.newRoute.get('password').setValue(res['data']['password']);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (res['statusCode'] == 400) {\n\t\t\t\t\t\t\tconsole.error(res);\n\t\t\t\t\t\t\talert(\"It was not possible to load the previous info of the route\");\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t});\n\t}\n\n\tgoBack() {\n\t\tthis.location.back();\n\t}\n\n\ttryConnection(): void {\n\t\tthis.routeService.checkReachability(this.routeID).subscribe(res => {\n\t\t\tthis.isReachable = res;\n\t\t})\n\t}\n\n\tsave(): void {\n\t\tthis.routeService.editRoute(this.routeID, this.newRoute.value.name, this.newRoute.value.uri, this.newRoute.value.username, this.newRoute.value.password)\n\t\t\t.subscribe(\n\t\t\t\tres => {\n\t\t\t\t\tif (res['statusCode'] == 200) {\n\t\t\t\t\t\tthis.router.navigate(['/home']);\n\t\t\t\t\t}\n\t\t\t\t\telse if (res['statusCode'] == 400) {\n\t\t\t\t\t\tconsole.error(res);\n\t\t\t\t\t\talert(\"It was not possible to edit the route\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t}\n}\n","<app-toolbar></app-toolbar>\n<button mat-icon-button class=\"goBack\" (click)=\"goBack()\">\n\t<mat-icon>arrow_back</mat-icon>\n</button>\n<div class=\"general\">\n\t<h2 class=\"editRoute\">\n\t\tEdit existing route\n\t</h2>\n\t<form [formGroup]=\"newRoute\">\n\t\t<mat-form-field appearance=\"legacy\">\n\t\t\t<mat-label>Name</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"name\">\n\t\t</mat-form-field>\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"uri\">\n\t\t\t<mat-label>uri</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"uri\">\n\t\t</mat-form-field>\n\t\t<!-- <button mat-icon-button disabled>\n\t\t\t<mat-icon id=\"reachable\" class=\"status\" *ngIf=\"isReachable\">check_circle</mat-icon>\n\t\t\t<mat-icon id=\"notReachable\" class=\"status\" *ngIf=\"!isReachable\">highlight_off</mat-icon>\n\t\t</button> -->\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"username\">\n\t\t\t<mat-label>Username</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"username\">\n\t\t</mat-form-field>\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"password\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"password\">\n\t\t</mat-form-field>\n\t</form>\n\t<div class=\"controls\">\n\t\t<!-- <button mat-raised-button id=\"tryConnection\" (click)=\"tryConnection()\">Try connection</button>\n\t\t<br> -->\n\t\t<button mat-raised-button id=\"save\" (click)=\"save()\">Save</button>\n\t</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { ConfirmRouteDeleteComponent } from '../confirm-route-delete/confirm-route-delete.component'\nimport { Router } from '@angular/router';\nimport { RouteService } from 'src/app/services/route.service';\n\nexport interface route {\n\tid: string,\n\tname: string,\n\turi: string,\n\tusername: string,\n\tpassword: string,\n\tstatus: boolean\n}\n\n@Component({\n\tselector: 'app-home',\n\ttemplateUrl: './home.component.html',\n\tstyleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n\troutes: route[] = [];\n\n\tconstructor(private confirmRouteDelete: MatBottomSheet,\n\t\tprivate router: Router,\n\t\tprivate routeService: RouteService) {\n\t\tthis.refreshRoutes();\n\t}\n\n\t/* Asks to backend for the routes saved */\n\trefreshRoutes(): void {\n\t\tthis.routes = [];\n\t\tthis.routeService.getAllRoutes().subscribe(res => {\n\t\t\tfor (let r of res['data']) {\n\t\t\t\tthis.routes.push({\n\t\t\t\t\tid: r['id'],\n\t\t\t\t\tname: r['name'],\n\t\t\t\t\turi: r['uri'],\n\t\t\t\t\tusername: r['username'],\n\t\t\t\t\tpassword: r['password'],\n\t\t\t\t\tstatus: false\n\t\t\t\t});\n\t\t\t\tthis.routeIsReachable(r);\n\t\t\t}\n\t\t})\n\t}\n\n\t/*\n\tAttempts to reach de uri of the route.\n\tIn case of success the array \"routes\" is updated and returns true.\n\tOtherwise, the array \"routes\" is updated and returns false.\n\t */\n\trouteIsReachable(route): void {\n\t\tthis.routeService.checkReachability(route.id).subscribe(res => {\n\t\t\tvar index = this.routes.findIndex(r => r.id == route.id);\n\t\t\tif (index != -1) {\n\t\t\t\tthis.routes[index].status = res;\n\t\t\t}\n\t\t})\n\t}\n\n\t/* \n\tOpens a bottom sheet where the user confirms the delete.\n\tIf the user confirms the route is deleted from the array \"routes\"\n\t */\n\tdeleteRoute(route): void {\n\t\tthis.confirmRouteDelete.open(ConfirmRouteDeleteComponent, { data: { route: route } });\n\t\tthis.confirmRouteDelete._openedBottomSheetRef.afterDismissed().subscribe((dataFromChild) => {\n\t\t\tif (dataFromChild == \"deletePermanently\") {\n\t\t\t\tthis.routeService.deleteRoute(route.id).subscribe(\n\t\t\t\t\tres => {\n\t\t\t\t\t\tif (res['data']) {\n\t\t\t\t\t\t\tthis.refreshRoutes()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\talert(\"It was not possible to delete the route\");\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\t/* Navigates to Edit Route with the info of the route */\n\tgoEditRoute(route): void {\n\t\tthis.router.navigate(['/editroute/' + route.id])\n\t}\n\n\t/* Navigates to Add Route page */\n\tgoAddRoute() {\n\t\tthis.router.navigate(['/addroute']);\n\t}\n\n\t/* Navigates to Scheduler page */\n\tgoScheduler() {\n\t\tthis.router.navigate(['/scheduler']);\n\t}\n}\n","<app-toolbar></app-toolbar>\n<div class=\"databaseRoutes\">\n\t<h2 class=\"databaseRoutes\">Database routes\n\t\t<button mat-raised-button class=\"databaseRoutes\" color=\"primary\" (click)=\"goAddRoute()\">Add route</button>\n\t</h2>\n\t<mat-list *ngFor=\"let route of routes; last as last\">\n\t\t<span id=\"lightText\">Name: </span>\n\t\t<span id=\"routeTitle\">{{route.name}}</span>\n\t\t<mat-list-item>\n\t\t\t<span id=\"lightText\">uri: </span>\n\t\t\t<span class=\"routeUri\">{{route.uri}}</span>\n\t\t\t<span class=\"routeControls\">\n\t\t\t\t<span id=\"lightText\" style=\"margin-top: 11px;\">status</span>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"!route.status\" disabled>\n\t\t\t\t\t<mat-icon id=\"notReachable\" class=\"status\">highlight_off</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"route.status\" disabled>\n\t\t\t\t\t<mat-icon id=\"reachable\" class=\"status\">check_circle</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"route.status\" (click)=\"routeIsReachable(route)\">\n\t\t\t\t\t<mat-icon id=\"refreshGrey\">autorenew</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"!route.status\" (click)=\"routeIsReachable(route)\">\n\t\t\t\t\t<mat-icon id=\"refresh\">autorenew</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" (click)=\"goEditRoute(route)\">\n\t\t\t\t\t<mat-icon id=\"edit\">edit</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" (click)=\"deleteRoute(route)\">\n\t\t\t\t\t<mat-icon id=\"delete\">delete</mat-icon>\n\t\t\t\t</button>\n\t\t\t</span>\n\t\t</mat-list-item>\n\t\t<mat-list-item>\n\t\t\t<span id=\"lightText\">Username: </span>\n\t\t\t<span id=\"routeUsername\">{{route.username}}</span>\n\t\t\t<span id=\"lightText\">Password: </span>\n\t\t\t<span id=\"routePassword\">{{route.password}}</span>\n\t\t</mat-list-item>\n\t\t<mat-divider *ngIf=\"!last\"></mat-divider>\n\t</mat-list>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\tloginForm: FormGroup = new FormGroup({\n\t\tusername: new FormControl(),\n\t\tpassword: new FormControl()\n\t});\n\n\tconstructor(private userService: UserService,\n\t\tprivate router: Router) { }\n\n\tlogin(): void {\n\t\tthis.userService.login(this.loginForm.get('username').value, this.loginForm.get('password').value)\n\t\t\t.subscribe(\n\t\t\t\tres => {\n\t\t\t\t\tif (res['statusCode'] == 200) {\n\t\t\t\t\t\tconsole.log(\"INICIO DE SESION BIEN\");\n\t\t\t\t\t\tconsole.log(res['data']);\n\t\t\t\t\t\tlocalStorage.setItem('token', res['data']);\n\t\t\t\t\t\tthis.router.navigate(['home']);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.log(\"INICIO DE SESION MAL\");\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tconsole.log(\"Error al iniciar sesion\");\n\t\t\t\t});\n\t}\n\n}\n","<app-toolbar></app-toolbar>\n<div class=\"general\">\n\t<h2 class=\"addRoute\">\n\t\tLogin\n\t</h2>\n\t<form [formGroup]=\"loginForm\">\n\t\t<mat-form-field appearance=\"legacy\" id=\"username\">\n\t\t\t<mat-label>Username</mat-label>\n\t\t\t<input matInput type=\"text\" formControlName=\"username\">\n\t\t</mat-form-field>\n\t\t<br>\n\t\t<mat-form-field appearance=\"legacy\" id=\"password\">\n\t\t\t<mat-label>Password</mat-label>\n\t\t\t<input matInput type=\"password\" formControlName=\"password\">\n\t\t</mat-form-field>\n\t</form>\n\t<div class=\"controls\">\n\t\t<button mat-raised-button id=\"save\" (click)=\"login()\">Enter</button>\n\t</div>\n</div>","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ServerResponseCode {\n    //SPECIFIC ERROR CODES\n\tstatic JOB_WITH_SAME_NAME_EXIST = 501;\n\tstatic JOB_NAME_NOT_PRESENT = 502;\n\t\n\tstatic JOB_ALREADY_IN_RUNNING_STATE = 510;\n\t\n\tstatic JOB_NOT_IN_PAUSED_STATE = 520;\n\tstatic JOB_NOT_IN_RUNNING_STATE = 521;\n\t\n\tstatic JOB_DOESNT_EXIST = 500;\n\t\n\t//GENERIC ERROR\n\tstatic ERROR = 600;\n\t\n\t//SUCCESS CODES\n\tstatic SUCCESS = 200;\n}","import { Component, OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { ServerResponseCode } from './response.code.constants';\r\nimport { Subscription, Observable, timer } from 'rxjs';\r\nimport { SchedulerService } from 'src/app/services/scheduler.service';\r\n\r\ninterface job {\r\n\tvalue: string,\r\n\tviewValue: string\r\n}\r\n\r\n@Component({\r\n\tselector: 'app-scheduler',\r\n\ttemplateUrl: './scheduler.component.html',\r\n\tstyleUrls: ['./scheduler.component.css']\r\n})\r\nexport class SchedulerComponent implements OnInit, OnDestroy {\r\n\tschedulerForm: FormGroup;\r\n\tjobNameStatus: boolean = false;\r\n\tjobRecords = [];\r\n\tjobRefreshTimerSubscription: Subscription;\r\n\r\n\tisEditMode: boolean = false;\r\n\r\n\tjobTypes: job[] = [\r\n\t\t{\r\n\t\t\tvalue: \"download-emotions\",\r\n\t\t\tviewValue: \"Download emotions\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tvalue: \"download-osm\",\r\n\t\t\tviewValue: \"Download data from OSM\"\r\n\t\t}\r\n\t]\r\n\tdefaultJobType=\"download-emotions\";\r\n\r\n\tconstructor(private _router: Router,\r\n\t\tprivate _fb: FormBuilder,\r\n\t\tprivate _schedulerService: SchedulerService,\r\n\t\tprivate _responseCode: ServerResponseCode) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.schedulerForm = this._fb.group({\r\n\t\t\tjobName: [''],\r\n\t\t\tyear: [''],\r\n\t\t\tmonth: [''],\r\n\t\t\tday: [''],\r\n\t\t\thour: [''],\r\n\t\t\tminute: [''],\r\n\t\t\tcronExpression: ['0 0/1 * 1/1 * ? *'],\r\n\t\t\tjobType: [this.defaultJobType]\r\n\t\t});\r\n\t\tthis.setDate();\r\n\t\tthis.getJobs();\r\n\r\n\t\tlet tick = timer(2000, 3000);\r\n\t\tthis.jobRefreshTimerSubscription = tick.subscribe(t => {\r\n\t\t\tthis.getJobs();\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.jobRefreshTimerSubscription.unsubscribe();\r\n\t}\r\n\r\n\tsetDate(): void {\r\n\t\tlet date = new Date();\r\n\t\tthis.schedulerForm.patchValue({\r\n\t\t\tyear: date.getFullYear(),\r\n\t\t\tmonth: date.getMonth() + 1,\r\n\t\t\tday: date.getDate(),\r\n\t\t\thour: date.getHours(),\r\n\t\t\tminute: date.getMinutes()\r\n\t\t});\r\n\t}\r\n\r\n\tresetForm() {\r\n\t\tvar dateNow = new Date();\r\n\t\tthis.schedulerForm.patchValue({\r\n\t\t\tjobName: \"\",\r\n\t\t\tyear: dateNow.getFullYear(),\r\n\t\t\tmonth: dateNow.getMonth() + 1,\r\n\t\t\tday: dateNow.getDate(),\r\n\t\t\thour: dateNow.getHours(),\r\n\t\t\tminute: dateNow.getMinutes()\r\n\t\t});\r\n\t\tthis.jobNameStatus = false;\r\n\t}\r\n\r\n\tgetJobs() {\r\n\t\tthis._schedulerService.getJobs().subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS) {\r\n\t\t\t\t\tthis.jobRecords = success['data'];\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"Some error while fetching jobs\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tlet dateToShow = new Date(success.scheduleTime);\r\n\t\t\t\tthis.jobRecords.scheduleTime = this.getFormattedDate(dateToShow.getFullYear(), \r\n\t\t\t\t  dateToShow.getMonth(),dateToShow.getHours(), dateToShow.getHours(),\r\n\t\t\t\t  dateToShow.getMinutes());\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while getting all jobs\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tgetFormattedDate(year, month, day, hour, minute) {\r\n\t\treturn year + \"/\" + month + \"/\" + day + \" \" + hour + \":\" + minute;\r\n\t}\r\n\r\n\tcheckJobExistWith(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.isJobWithNamePresent(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS) {\r\n\t\t\t\t\tif (success['data'] == true) {\r\n\t\t\t\t\t\tthis.jobNameStatus = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.jobNameStatus = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_NAME_NOT_PRESENT) {\r\n\t\t\t\t\talert(\"Job name is mandatory.\");\r\n\t\t\t\t\tthis.schedulerForm.patchValue({\r\n\t\t\t\t\t\tjobName: \"\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while checkinh job with name exist.\");\r\n\t\t\t});\r\n\t\tthis.jobNameStatus = false;\r\n\t}\r\n\r\n\tscheduleJob() {\r\n\t\tvar jobName = this.schedulerForm.value.jobName;\r\n\t\tvar year = this.schedulerForm.value.year;\r\n\t\tvar month = this.schedulerForm.value.month;\r\n\t\tvar day = this.schedulerForm.value.day;\r\n\t\tvar hour = this.schedulerForm.value.hour;\r\n\t\tvar minute = this.schedulerForm.value.minute;\r\n\r\n\t\tthis.checkJobExistWith(jobName);\r\n\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": this.schedulerForm.value.jobName,\r\n\t\t\t\"jobScheduleTime\": this.getFormattedDate(year, month, day, hour, minute),\r\n\t\t\t\"cronExpression\": this.schedulerForm.value.cronExpression,\r\n\t\t\t\"jobType\": this.schedulerForm.value.jobType\r\n\t\t}\r\n\r\n\t\tthis._schedulerService.scheduleJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS) {\r\n\t\t\t\t\talert(\"Job scheduled successfully.\");\r\n\t\t\t\t\tthis.resetForm();\r\n\r\n\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_WITH_SAME_NAME_EXIST) {\r\n\t\t\t\t\talert(\"Job with same name exists, Please choose different name.\");\r\n\r\n\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_NAME_NOT_PRESENT) {\r\n\t\t\t\t\talert(\"Job name is mandatory.\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.jobRecords = success['data'];\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while getting all jobs\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdateJob() {\r\n\t\tvar jobName = this.schedulerForm.value.jobName;\r\n\t\tvar year = this.schedulerForm.value.year;\r\n\t\tvar month = this.schedulerForm.value.month;\r\n\t\tvar day = this.schedulerForm.value.day;\r\n\t\tvar hour = this.schedulerForm.value.hour;\r\n\t\tvar minute = this.schedulerForm.value.minute;\r\n\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": this.schedulerForm.value.jobName,\r\n\t\t\t\"jobScheduleTime\": this.getFormattedDate(year, month, day, hour, minute),\r\n\t\t\t\"cronExpression\": this.schedulerForm.value.cronExpression\r\n\t\t}\r\n\r\n\t\tthis._schedulerService.updateJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS) {\r\n\t\t\t\t\talert(\"Job updated successfully.\");\r\n\t\t\t\t\tthis.resetForm();\r\n\r\n\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_DOESNT_EXIST) {\r\n\t\t\t\t\talert(\"Job no longer exist.\");\r\n\r\n\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_NAME_NOT_PRESENT) {\r\n\t\t\t\t\talert(\"Please provide job name.\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.jobRecords = success['data'];\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while updating job\");\r\n\t\t\t});\r\n\t}\r\n\r\n\teditJob(selectedJobRow) {\r\n\t\tthis.isEditMode = true;\r\n\r\n\t\tvar d = Date.parse(selectedJobRow.scheduleTime);\r\n\t\tlet date = new Date(selectedJobRow.scheduleTime);\r\n\t\tthis.schedulerForm.patchValue({\r\n\t\t\tjobName: selectedJobRow.jobName,\r\n\t\t\tyear: date.getFullYear(),\r\n\t\t\tmonth: date.getMonth() + 1,\r\n\t\t\tday: date.getDate(),\r\n\t\t\thour: date.getHours(),\r\n\t\t\tminute: date.getMinutes()\r\n\t\t});\r\n\t}\r\n\r\n\tcancelEdit() {\r\n\t\tthis.resetForm();\r\n\t\tthis.isEditMode = false;\r\n\t}\r\n\r\n\tpauseJob(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.pauseJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS && success['data'] == true) {\r\n\t\t\t\t\talert(\"Job paused successfully.\")\r\n\r\n\t\t\t\t} else if (success['data'] == false) {\r\n\t\t\t\t\tif (success['statusCode'] == ServerResponseCode.JOB_ALREADY_IN_RUNNING_STATE) {\r\n\t\t\t\t\t\talert(\"Job already started/completed, so cannot be paused.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.getJobs();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while pausing job\");\r\n\t\t\t});\r\n\r\n\t\t//For updating fresh status of all jobs \r\n\t\tthis.getJobs();\r\n\t}\r\n\r\n\tresumeJob(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.resumeJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS && success['data'] == true) {\r\n\t\t\t\t\talert(\"Job resumed successfully.\")\r\n\r\n\t\t\t\t} else if (success['data'] == false) {\r\n\t\t\t\t\tif (success['statusCode'] == ServerResponseCode.JOB_NOT_IN_PAUSED_STATE) {\r\n\t\t\t\t\t\talert(\"Job is not in paused state, so cannot be resumed.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//For updating fresh status of all jobs \r\n\t\t\t\tthis.getJobs();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while resuming job\");\r\n\t\t\t});\r\n\r\n\t\t//For updating fresh status of all jobs \r\n\t\tthis.getJobs();\r\n\t}\r\n\r\n\tstopJob(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.stopJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS && success['data'] == true) {\r\n\t\t\t\t\talert(\"Job stopped successfully.\")\r\n\r\n\t\t\t\t} else if (success['data'] == false) {\r\n\t\t\t\t\tif (success['statusCode'] == ServerResponseCode.JOB_NOT_IN_RUNNING_STATE) {\r\n\t\t\t\t\t\talert(\"Job not started, so cannot be stopped.\");\r\n\r\n\t\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_ALREADY_IN_RUNNING_STATE) {\r\n\t\t\t\t\t\talert(\"Job already started.\");\r\n\r\n\t\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_DOESNT_EXIST) {\r\n\t\t\t\t\t\talert(\"Job no longer exist.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//For updating fresh status of all jobs \r\n\t\t\t\tthis.getJobs();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while pausing job\");\r\n\t\t\t});\r\n\t}\r\n\r\n\tstartJobNow(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.startJobNow(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS && success['data'] == true) {\r\n\t\t\t\t\talert(\"Job started successfully.\")\r\n\r\n\t\t\t\t} else if (success['data'] == false) {\r\n\t\t\t\t\tif (success['statusCode'] == ServerResponseCode.ERROR) {\r\n\t\t\t\t\t\talert(\"Server error while starting job.\");\r\n\r\n\t\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_ALREADY_IN_RUNNING_STATE) {\r\n\t\t\t\t\t\talert(\"Job is already started.\");\r\n\r\n\t\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_DOESNT_EXIST) {\r\n\t\t\t\t\t\talert(\"Job no longer exist.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//For updating fresh status of all jobs \r\n\t\t\t\tthis.getJobs();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while starting job now.\");\r\n\t\t\t});\r\n\r\n\t\t//For updating fresh status of all jobs \r\n\t\tthis.getJobs();\r\n\t}\r\n\r\n\tdeleteJob(jobName) {\r\n\t\tvar data = {\r\n\t\t\t\"jobName\": jobName\r\n\t\t}\r\n\t\tthis._schedulerService.deleteJob(data).subscribe(\r\n\t\t\tsuccess => {\r\n\t\t\t\tif (success['statusCode'] == ServerResponseCode.SUCCESS && success['data'] == true) {\r\n\t\t\t\t\talert(\"Job deleted successfully.\");\r\n\r\n\t\t\t\t} else if (success['data'] == false) {\r\n\t\t\t\t\tif (success['statusCode'] == ServerResponseCode.JOB_ALREADY_IN_RUNNING_STATE) {\r\n\t\t\t\t\t\talert(\"Job is already started/completed, so cannot be deleted.\");\r\n\r\n\t\t\t\t\t} else if (success['statusCode'] == ServerResponseCode.JOB_DOESNT_EXIST) {\r\n\t\t\t\t\t\talert(\"Job no longer exist.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//For updating fresh status of all jobs\r\n\t\t\t\tthis.getJobs();\r\n\t\t\t},\r\n\t\t\terr => {\r\n\t\t\t\talert(\"Error while deleting job\");\r\n\t\t\t});\r\n\t}\r\n\r\n\trefreshJob() {\r\n\t\t//For updating fresh status of all jobs \r\n\t\tthis.getJobs();\r\n\t}\r\n\r\n\tcronChange(cronExp) {\r\n\t\tthis.schedulerForm.patchValue({\r\n\t\t\tcronExpression: cronExp\r\n\t\t});\r\n\t}\r\n}","<app-toolbar></app-toolbar>\n<form [formGroup]=\"schedulerForm\" novalidate autocomplete=\"off\">\n\t<table>\n\t\t<tr>\n\t\t\t<td>Enter Job Name:</td>\n\t\t\t<td>\n\t\t\t\t<input type=\"text\" name=\"jobName\" id=\"jobName\" class=\"form-control\" formControlName=\"jobName\"\n\t\t\t\t\tstyle=\"width:100px\" [readonly]=\"isEditMode\" />\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"!jobNameStatus\" disabled>\n\t\t\t\t\t<mat-icon id=\"notReachable\" class=\"status\">highlight_off</mat-icon>\n\t\t\t\t</button>\n\t\t\t\t<button mat-icon-button class=\"routeControls\" *ngIf=\"jobNameStatus\" disabled>\n\t\t\t\t\t<mat-icon id=\"reachable\" class=\"status\">check_circle</mat-icon>\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button class=\"btn btn-primary\" (click)=\"checkJobExistWith(schedulerForm.value.jobName)\">Check name conflict</button>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table>\n\t\t<tr>\n\t\t\t<td>Select Job Type:</td>\n\t\t\t<td>\n\t\t\t\t<select name=\"jobType\" id=\"jobType\" formControlName=\"jobType\">\n\t\t\t\t\t<option *ngFor=\"let option of jobTypes\" value=option.value [ngValue]=option.value selected>{{option.viewValue}}</option>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br />\n\t<table>\n\t\t<tr>\n\t\t\t<td>Enter Date and Time:</td>\n\t\t\t<td>\n\t\t\t\tYear:\n\t\t\t\t<input type=\"text\" name=\"year\" id=\"year\" class=\"form-control\" formControlName=\"year\"\n\t\t\t\t\tstyle=\"width:100px\" />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\tMonth:\n\t\t\t\t<input type=\"text\" name=\"month\" id=\"month\" class=\"form-control\" formControlName=\"month\"\n\t\t\t\t\tstyle=\"width:100px\" />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\tDay:\n\t\t\t\t<input type=\"text\" name=\"day\" id=\"day\" class=\"form-control\" formControlName=\"day\" style=\"width:100px\" />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\tHour(24-hour):\n\t\t\t\t<input type=\"text\" name=\"hour\" id=\"hour\" class=\"form-control\" formControlName=\"hour\"\n\t\t\t\t\tstyle=\"width:100px\" />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\tMinute:\n\t\t\t\t<input type=\"text\" name=\"minute\" id=\"minute\" class=\"form-control\" formControlName=\"minute\"\n\t\t\t\t\tstyle=\"width:100px\" />\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td></td>\n\t\t\t<td style=\"padding: 5px;\" colspan=\"5\">\n\t\t\t\t<b>If given date/time is invalid then job will not get scheduled.\n\t\t\t\t\tIf given date is older than current date then job will be started immediately</b>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<br /><br />\n\t<table>\n\t\t<tr>\n\t\t\t<td style=\"padding: 5px;\">\n\t\t\t\tEnter Cron expression\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input type=\"text\" name=\"cronExpression\" id=\"cronExpression\" class=\"form-control\"\n\t\t\t\t\tformControlName=\"cronExpression\" style=\"width:200px\" />\n\t\t\t</td>\n\t\t\t<td>Select Sample Cron:</td>\n\t\t\t<td>\n\t\t\t\t<select (change)=\"cronChange($event.target.value)\" class=\"form-control\">\n\t\t\t\t\t<option value=\"0 0/1 * 1/1 * ? *\">Every 1 minutes</option>\n\t\t\t\t\t<option value=\"0 0 10 1/1 * ? *\">Every day at 10 AM</option>\n\t\t\t\t\t<option value=\"0 0 0/1 1/1 * ? *\">Every hour starting 10 AM</option>\n\t\t\t\t\t<option value=\"0 0 10 ? * TUE,THU *\">Every week Tue and Thur at 10 AM</option>\n\t\t\t\t</select>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td></td>\n\t\t\t<td colspan=\"2\">\n\t\t\t\t<b>If Cron expression is blank then it will be treated as One time job</b>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\t<table>\n\t\t<tr>\n\t\t\t<td style=\"padding: 5px;\" colspan=\"2\">\n\n\t\t\t\t<!-- Used only in case of Adding New Job -->\n\t\t\t\t<input type=\"button\" name=\"submit\" id=\"submit\" class=\"btn btn-primary\" (click)=\"scheduleJob()\"\n\t\t\t\t\t*ngIf=\"!isEditMode\" value=\"Submit\" />\n\n\t\t\t\t<!-- Used only in case of Edit Job -->\n\t\t\t\t<input type=\"button\" name=\"submit\" id=\"submit\" class=\"btn btn-primary\" (click)=\"updateJob()\"\n\t\t\t\t\t*ngIf=\"isEditMode\" value=\"Update\" />\n\n\t\t\t\t<input type=\"button\" name=\"submit\" id=\"submit\" class=\"btn btn-primary\" (click)=\"cancelEdit()\"\n\t\t\t\t\t*ngIf=\"isEditMode\" value=\"Cancel\" />\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</form>\n<br /><br />\n<div>\n\t<label>Job List:</label>\n\t<br /><br />\n\t<label style=\"color: red\">\n\t\tNote:<br />\n\t\t1. Completed jobs will not be shown in listing.\n\t\t<br />\n\t\t2. If job is in \"RUNNING\" state then no action like \"Pause, Resume, Delete, Edit\" is allowed. </label>\n\t<br /><br />\n\n\t<table class=\"table table-responsive table-hover\" border=\"1\" style=\"width : 100%;\">\n\t\t<thead>\n\t\t\t<th>Job Name</th>\n\t\t\t<th>Job Schedule Time</th>\n\t\t\t<th>Job Last Fired Time</th>\n\t\t\t<th>Job Next Fire Time</th>\n\t\t\t<th>Action</th>\n\t\t\t<th>Job Status</th>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<ng-container *ngFor=\"let jobRec of jobRecords;let i=index\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{{jobRec.jobName}}</td>\n\t\t\t\t\t<td>{{jobRec.scheduleTime | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n\t\t\t\t\t<td>{{jobRec.lastFiredTime | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n\t\t\t\t\t<td>{{jobRec.nextFireTime | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus == 'RUNNING'\"\n\t\t\t\t\t\t\t(click)='startJobNow(jobRec.jobName)'>Start Job Now</button> |\n\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus != 'SCHEDULED'\"\n\t\t\t\t\t\t\t(click)='pauseJob(jobRec.jobName)'>Pause Job</button> |\n\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus != 'PAUSED'\"\n\t\t\t\t\t\t\t(click)='resumeJob(jobRec.jobName)'>Resume Job</button> |\n\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus == 'RUNNING'\"\n\t\t\t\t\t\t\t(click)='deleteJob(jobRec.jobName)'>Delete Job</button> |\n\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus != 'RUNNING'\"\n\t\t\t\t\t\t\t(click)='stopJob(jobRec.jobName)'>Stop Job</button> |\n\n\t\t\t\t\t\t<button class=\"btn btn-primary\" [disabled]=\"jobRec.jobStatus == 'RUNNING'\"\n\t\t\t\t\t\t\t(click)='editJob(jobRec)'>Edit Job</button>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{{jobRec.jobStatus}}</td>\n\t\t\t\t</tr>\n\t\t\t</ng-container>\n\t\t</tbody>\n\t</table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n\tselector: 'app-toolbar',\n\ttemplateUrl: './toolbar.component.html',\n\tstyleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent {\n\n\tthereIsToken: boolean;\n\n\tconstructor(private router: Router,\n\t\tprivate userService: UserService) {\n\t\tif (localStorage.getItem('token') != null) {\n\t\t\tthis.thereIsToken = true;\n\t\t}\n\t\telse {\n\t\t\tthis.thereIsToken = false;\n\t\t}\n\t}\n\n\tgoSchedulerPage() {\n\t\tthis.router.navigate(['/scheduler']);\n\t}\n\n\tgoRoutesPage() {\n\t\tthis.router.navigate(['/home']);\n\t}\n\n\tlogout(): void {\n\t\tlocalStorage.removeItem('token');\n\t\tthis.router.navigate(['/login']);\n\t}\n\n\tgoProfilePage() {\n\t\tif (localStorage.getItem('token') != null) {\n\t\t\tthis.router.navigate(['/profile']);\n\t\t}\n\t\telse {\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t}\n}\n","<mat-toolbar color=\"primary\">Emotions Map Administration\n\t<button mat-stroked-button *ngIf=\"thereIsToken\" id=\"routesButton\" color=\"basic\" (click)=\"goRoutesPage()\">\n\t\tView routes\n\t</button>\n\t<button mat-stroked-button *ngIf=\"thereIsToken\" id=\"schedulerButton\" color=\"basic\" (click)=\"goSchedulerPage()\">\n\t\tSet scheduler\n\t</button>\n\t<button mat-flat-button *ngIf=\"thereIsToken\" id=\"loginButton\" color=\"basic\" (click)=\"logout()\">\n\t\tLogout\n\t</button>\n</mat-toolbar>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\"\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n\tconstructor(private router: Router) { }\r\n\r\n\tintercept(req: HttpRequest<any>,\r\n\t\tnext: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n\t\tconst idToken: string = localStorage.getItem(\"token\");\r\n\t\tif (idToken) {\r\n\t\t\tconst cloned = req.clone({\r\n\t\t\t\theaders: req.headers.set('Authorization',\r\n\t\t\t\t\t'Bearer ' + idToken)\r\n\t\t\t});\r\n\t\t\treturn next.handle(cloned);\r\n\t\t}\r\n\t\telse if (req.url == (API_URL + \"/users/login\")) {\r\n\t\t\treturn next.handle(req);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.router.navigate(['login']);\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + '/routes';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class RouteService {\n\n\tconstructor(private http: HttpClient) { }\n\n\tgetAllRoutes(){\n\t\treturn this.http.get<JSON>(BACKEND_URL + '/allroutes');\n\t}\n\n\tgetRoute(id: String){\n\t\treturn this.http.get<JSON>(BACKEND_URL + '/route/' + id);\n\t}\n\n\taddRoute(name: String, uri: String, username: String, password: String){\n\t\tvar body = {\n\t\t\tname: name,\n\t\t\turi: uri,\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}\n\t\treturn this.http.post<JSON>(BACKEND_URL + '/route', body);\n\t}\n\n\teditRoute(id: String, name: String, uri: String, username: String, password: String){\n\t\tvar body = {\n\t\t\tname: name,\n\t\t\turi: uri,\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}\n\t\treturn this.http.put<JSON>(BACKEND_URL + '/route/' + id, body);\n\t}\n\n\tdeleteRoute(id: String){\n\t\treturn this.http.delete<JSON>(BACKEND_URL + '/route/' + id);\n\t}\n\n\tcheckReachability(id: String){\n\t\treturn this.http.get<boolean>(BACKEND_URL + \"/reachability/\" + id);\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, RequestMethod, RequestOptionsArgs, URLSearchParams } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class SchedulerService {\r\n\r\n\tgetJobsUrl = \"/scheduler/jobs\";\r\n\tscheduleJobUrl = \"/scheduler/schedule\";\r\n\tpauseJobUrl = \"/scheduler/pause\";\r\n\tresumeJobUrl = \"/scheduler/resume\";\r\n\tdeleteJobUrl = \"/scheduler/delete\";\r\n\tupdateJobUrl = \"/scheduler/update\";\r\n\tisJobWithNamePresentUrl = \"/scheduler/checkJobName\";\r\n\tstopJobUrl = \"/scheduler/stop\";\r\n\tstartJobNowUrl = \"/scheduler/start\";\r\n\r\n\t/* Http functions are not intercepted so the token has to be set manually, for future versions it is better to use HttpClient */\r\n\tprivate options = new RequestOptions(\r\n\t\t{\r\n\t\t\theaders: new Headers({\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': localStorage.getItem('token')\r\n\t\t\t})\r\n\t\t});\r\n\r\n\tconstructor(\r\n\t\tprivate _http: Http,\r\n\t\tprivate http: HttpClient) {\r\n\t}\r\n\r\n\tgetJobs() {\r\n\t\treturn this.http.get<JSON>(BACKEND_URL + this.getJobsUrl);\r\n\t}\r\n\r\n\tscheduleJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\r\n\t\treturn this._http.get(BACKEND_URL + this.scheduleJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tisJobWithNamePresent(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.isJobWithNamePresentUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tpauseJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.pauseJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tresumeJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.resumeJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tdeleteJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.deleteJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tstopJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.stopJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tstartJobNow(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\t\treturn this._http.get(BACKEND_URL + this.startJobNowUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n\r\n\tupdateJob(data) {\r\n\t\tlet params: URLSearchParams = new URLSearchParams();\r\n\t\tfor (let key in data) {\r\n\t\t\tparams.set(key, data[key]);\r\n\t\t}\r\n\t\tthis.options.search = params;\r\n\r\n\t\treturn this._http.get(BACKEND_URL + this.updateJobUrl, this.options).pipe(map(res => res.json()));\r\n\t}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\n\nconst BACKEND_URL = environment.apiUrl + '/users';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class UserService {\n\n\tconstructor(private http: HttpClient,\n\t\tprivate router: Router) { }\n\n\tlogin(username: String, password: String) {\n\t\tvar body = {\n\t\t\tusername: username,\n\t\t\tpassword: password\n\t\t}\n\t\treturn this.http.post<JSON>(BACKEND_URL + '/login', body);\n\t}\n\n\tlogout() {\n\t\tlocalStorage.removeItem('token');\n\t\tthis.router.navigate(['login']);\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false,\n\tapiUrl: 'http://localhost:7080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}